[project]
name = "agents"
version = "0.1.0"
description = "collaboral damage - a history of agents"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "basedpyright>=1.29.2",
    "fastapi>=0.115.12",
    "pydantic-ai>=0.2.6",
    "python-dotenv>=1.1.0",
    "uvicorn>=0.34.2",
    "redis>=5.0.1",
    "httpx>=0.27.0",
    "python-decouple>=3.8",
    "taskipy>=1.14.1",
    "jinja2>=3.1.6",
    "fasta2a>=0.2.6",
    "pytest>=8.4.0",
    "anyio>=4.9.0",
    "pytest-asyncio>=1.0.0",
    "pytest-tornasync>=0.6.0.post2",
    "pytest-trio>=0.8.0",
    "pytest-twisted>=1.14.3",
    "twisted>=25.5.0",
]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.taskipy.tasks]
clean = "find . -type d -name '__pycache__' -exec rm -r {} +"
format = "ruff format"
check = "ruff check --fix --unsafe-fixes --exclude aaa_trash"
release = "bash scripts/tag_release.sh"
test = "pytest -v -s"
export = "python app/helpers/export_dialogues.py"
